Generate source code.
Generating source codes for DF2
\n\n Compiling GCC BINs from O0 to Os
\nCompile gcc O0 Binaries
1000/1000 o0-bin-Complete.
\nCompile gcc O1 Binaries
1000/1000 o1-bin-Complete.
\nCompile gcc O2 Binaries
1000/1000 o2-bin-Complete.
\nCompile gcc O3 Binaries
1000/1000 o3-bin-Complete.
\nCompile gcc Os Binaries
1000/1000 os-bin-Complete.
\n\n Compiling CLANG BINs from O0 to Os
\nCompile clang O0 Binaries
1000/1000 o0-bin-Complete.
\nCompile clang O1 Binaries
1000/1000 o1-bin-Complete.
\nCompile clang O2 Binaries
1000/1000 o2-bin-Complete.
\nCompile clang O3 Binaries
1000/1000 o3-bin-Complete.
\nCompile clang Os Binaries
1000/1000 os-bin-Complete.
Compiling IRs from O0 to Os
Compile O0 IRs
1000/1000 o0-ir-Complete.
\nCompile O1 IRs
1000/1000 o1-ir-Complete.
\nCompile O2 IRs
1000/1000 o2-ir-Complete.
\nCompile O3 IRs
1000/1000 o3-ir-Complete.
\nCompile Os IRs
1000/1000 os-ir-Complete.
Checking IRs.
check_attr.py:	Processing o0...
check_attr.py:	Processing o1...
check_attr.py:	Processing o2...
check_attr.py:	Processing o3...
check_attr.py:	Processing os...
\n
check_poison.py:	Processing o0...
check_poison.py:	Processing o1...
check_poison.py:	Processing o2...
check_poison.py:	Processing o3...
check_poison.py:	Processing os...
Writing results to log file...
\n
check_if.py:	Processing o0...
check_if.py:	Processing o1...
check_if.py:	Processing o2...
check_if.py:	Processing o3...
check_if.py:	Processing os...
Writing results to log file...
checking result
Checking o0...
Checking o1...
Checking o2...
Checking o3...
Checking os...

All checked.
