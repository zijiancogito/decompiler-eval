/* This file was generated by the Hex-Rays decompiler version 8.2.0.221215.
   Copyright (c) 2007-2021 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

__int64 (**init_proc())(void);
void sub_1020();
// int printf(const char *format, ...);
// __int64 __isoc99_scanf(const char *, ...); weak
// int rand(void);
// int __fastcall _cxa_finalize(void *);
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void));
char *deregister_tm_clones();
__int64 register_tm_clones();
char *_do_global_dtors_aux();
__int64 __fastcall frame_dummy(); // weak
void __fastcall __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> f_printf(unsigned int a1);
__int64 __fastcall f_scanf_nop(); // weak
int f_rand();
__int64 __fastcall func0(int a1, unsigned int a2, __int64 a3, int a4);
__int64 __fastcall func1(int a1, int a2, int a3, int a4);
__int64 __fastcall func2(__int64 a1, unsigned int a2);
__int64 func3();
__int64 func4();
__int64 func5();
__int64 func6();
__int64 func7();
__int64 __fastcall func8(int a1, unsigned int a2);
__int64 __fastcall func9(int a1, unsigned int a2, __int64 a3);
int __cdecl main(int argc, const char **argv, const char **envp);
void term_proc();
// int __fastcall _libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int __fastcall __cxa_finalize(void *);
// __int64 _gmon_start__(void); weak

//-------------------------------------------------------------------------
// Data declarations

void *_dso_handle = &_dso_handle; // idb
char _bss_start; // weak


//----- (0000000000001000) ----------------------------------------------------
__int64 (**init_proc())(void)
{
  __int64 (**result)(void); // rax

  result = &_gmon_start__;
  if ( &_gmon_start__ )
    return (__int64 (**)(void))_gmon_start__();
  return result;
}
// 5080: using guessed type __int64 _gmon_start__(void);

//----- (0000000000001020) ----------------------------------------------------
void sub_1020()
{
  JUMPOUT(0LL);
}
// 1026: control flows out of bounds to 0

//----- (0000000000001070) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))
{
  __int64 v3; // rax
  int v4; // esi
  __int64 v5; // [rsp-8h] [rbp-8h] BYREF
  char *retaddr; // [rsp+0h] [rbp+0h] BYREF

  v4 = v5;
  v5 = v3;
  _libc_start_main((int (__fastcall *)(int, char **, char **))main, v4, &retaddr, 0LL, 0LL, a3, &v5);
  __halt();
}
// 107A: positive sp value 8 has been found
// 1081: variable 'v3' is possibly undefined

//----- (00000000000010A0) ----------------------------------------------------
char *deregister_tm_clones()
{
  return &_bss_start;
}
// 5040: using guessed type char _bss_start;

//----- (00000000000010D0) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000001110) ----------------------------------------------------
char *_do_global_dtors_aux()
{
  char *result; // rax

  if ( !_bss_start )
  {
    if ( &__cxa_finalize )
      _cxa_finalize(_dso_handle);
    result = deregister_tm_clones();
    _bss_start = 1;
  }
  return result;
}
// 5040: using guessed type char _bss_start;

//----- (0000000000001150) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 1150: using guessed type __int64 __fastcall frame_dummy();

//----- (0000000000001160) ----------------------------------------------------
void __fastcall __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> f_printf(unsigned int a1)
{
  printf("%d", a1);
}

//----- (0000000000001180) ----------------------------------------------------
__int64 __fastcall f_scanf_nop()
{
  __int64 v0; // rax
  unsigned int v2; // [rsp+0h] [rbp-4h] BYREF

  v2 = HIDWORD(v0);
  __isoc99_scanf("%d", &v2);
  return v2;
}
// 1180: variable 'v0' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);
// 1180: using guessed type __int64 __fastcall f_scanf_nop();

//----- (00000000000011A0) ----------------------------------------------------
int f_rand()
{
  return rand();
}

//----- (00000000000011B0) ----------------------------------------------------
__int64 __fastcall func0(int a1, unsigned int a2, __int64 a3, int a4)
{
  int v5; // r15d
  char v6; // bl
  char v7; // r14
  __int64 v8; // rax
  __int64 v9; // r14
  int v10; // ebx
  int v11; // r15d
  int v12; // ebp
  int v13; // r13d
  int v14; // ebx
  int v15; // r12d
  unsigned int v16; // ebx
  int v17; // esi
  int v18; // ebp
  int v19; // ebx
  unsigned int v20; // r12d
  int v21; // r15d
  int v22; // ecx
  int v23; // ebx
  unsigned int v24; // ebx
  unsigned int v26; // [rsp+Ch] [rbp-6Ch] BYREF
  int v27; // [rsp+10h] [rbp-68h]
  int v28; // [rsp+14h] [rbp-64h]
  unsigned int v29; // [rsp+18h] [rbp-60h]
  int v30; // [rsp+1Ch] [rbp-5Ch]
  __int64 v31; // [rsp+20h] [rbp-58h]
  __int64 v32; // [rsp+28h] [rbp-50h]
  int v33; // [rsp+34h] [rbp-44h]
  int v34; // [rsp+38h] [rbp-40h]
  int v35; // [rsp+3Ch] [rbp-3Ch]
  __int64 v36; // [rsp+40h] [rbp-38h]

  v29 = a2;
  v27 = a1;
  __isoc99_scanf("%d", &v26);
  v31 = v26;
  v5 = rand();
  __isoc99_scanf("%d", &v26);
  v6 = v26;
  v28 = v26;
  __isoc99_scanf("%d", &v26);
  __isoc99_scanf("%d", &v26);
  v7 = rand();
  __isoc99_scanf("%d", &v26);
  LODWORD(v8) = rand();
  v32 = v8;
  rand();
  __isoc99_scanf("%d", &v26);
  v9 = ((_BYTE)v5 + v6 * v7) & 1;
  v10 = a4 | (v5 + (a4 & 9));
  v35 = v10;
  printf("%d", (unsigned int)(6 - a4));
  v11 = v32;
  v12 = v32 + v9;
  v13 = v9;
  v36 = v9;
  printf("%d", (unsigned int)(v32 + v9));
  v33 = v28 / v10;
  v14 = v29 & v12;
  printf("%d", v29 & v12);
  v34 = v31 - v14;
  v15 = v27;
  LODWORD(v9) = v27 & v11;
  v28 = v27 & v11;
  v30 = v12;
  v16 = v31 ^ v12;
  printf("%d", (unsigned int)v31 ^ v12);
  v17 = (v13 | v16) * v9 * v12;
  v18 = v13 | v16;
  LODWORD(v9) = v33;
  printf("%d", (unsigned int)(v17 - v33 + 10));
  printf("%d", v15 ^ v16);
  v19 = v31;
  printf("%d", (unsigned int)(15 * v31));
  v20 = v29;
  v21 = v29 ^ (v32 + v18) | 6;
  v22 = v9;
  LODWORD(v9) = (int)v9 / v19;
  v23 = v34;
  LODWORD(v9) = v34 & v9;
  v27 = (v30 | (v22 / 7)) / (int)v29;
  LODWORD(v31) = 15 / v21;
  printf("%d", (unsigned int)(15 / v21));
  v24 = v23 / v18;
  printf("%d", v24);
  printf("%d", 16LL);
  printf("%d", v24 + 15);
  printf("%d", (unsigned int)((int)(v20 + v9 - v27) / 15));
  printf("%d", (unsigned int)(v32 + v36 - 10));
  printf("%d", (unsigned int)((int)((v20 * v24) ^ v35 ^ v21) / -10));
  return (unsigned int)(v30 * ((int)v31 / v28));
}
// 1247: variable 'v8' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000001490) ----------------------------------------------------
__int64 __fastcall func1(int a1, int a2, int a3, int a4)
{
  __int64 v5; // rax
  unsigned int v6; // ebx
  int v7; // r13d
  int v8; // r15d
  int v9; // r12d
  int v10; // ebp
  unsigned int v11; // r12d
  int v12; // r14d
  int v13; // ebp
  int v14; // ebx
  unsigned int v15; // r13d
  int v16; // ebx
  int v17; // r13d
  int v18; // r14d
  int v19; // r15d
  signed int v20; // r14d
  int v21; // ebx
  int v22; // r13d
  int v23; // ebp
  unsigned int v24; // r15d
  int v25; // ebx
  unsigned int v26; // r15d
  int v27; // ebp
  unsigned int v28; // ebx
  unsigned int v29; // ebx
  int v30; // r15d
  int v31; // ebx
  unsigned int v32; // ebp
  int v33; // ebp
  unsigned int v34; // r12d
  int v36; // [rsp+4h] [rbp-64h] BYREF
  int v37; // [rsp+8h] [rbp-60h]
  int v38; // [rsp+Ch] [rbp-5Ch]
  int v39; // [rsp+10h] [rbp-58h]
  int v40; // [rsp+14h] [rbp-54h]
  unsigned int v41; // [rsp+18h] [rbp-50h]
  int v42; // [rsp+1Ch] [rbp-4Ch]
  __int64 v43; // [rsp+20h] [rbp-48h]
  int v44; // [rsp+2Ch] [rbp-3Ch]
  int v45; // [rsp+30h] [rbp-38h]
  int v46; // [rsp+34h] [rbp-34h]

  v45 = a4;
  v38 = a3;
  v46 = a2;
  LODWORD(v5) = rand();
  v43 = v5;
  __isoc99_scanf("%d", &v36);
  v6 = a4 & v36;
  v39 = v6;
  __isoc99_scanf("%d", &v36);
  v7 = v36;
  v37 = rand();
  __isoc99_scanf("%d", &v36);
  v42 = v36;
  __isoc99_scanf("%d", &v36);
  rand();
  rand();
  __isoc99_scanf("%d", &v36);
  v8 = v36;
  __isoc99_scanf("%d", &v36);
  v9 = v36 * ((v8 / v7) ^ 1);
  printf("%d", v6);
  v9 |= 0xFFFFFFF9;
  v40 = -16 / v7;
  v10 = v37;
  v41 = v37 & (v9 * (-10 / v37));
  printf("%d", v41);
  v11 = (v10 * (v8 - ((int)v43 + a1) + 1) / (int)v43) | v9;
  printf("%d", v11);
  v12 = v39;
  v13 = v39 | 1;
  v14 = v42;
  v15 = (v39 | 1) ^ v42;
  v37 = v15;
  printf("%d", v15);
  v44 = v15 - v14;
  v16 = v43;
  v17 = v45;
  v38 = v45 | (v38 * v46 / (int)v43 / v12);
  printf("%d", (unsigned int)v38);
  v18 = v16 + ((v17 * ((int)(v8 & 0xFFFFFFF9) / v12)) & 0xFFFFFFF9);
  v19 = v16;
  v20 = v18 & 0xFFFFFFFA;
  printf("%d", (unsigned int)v20);
  v21 = v42;
  printf("%d", (unsigned int)((int)(v41 ^ (v42 | v13)) / v20));
  v22 = v19;
  v23 = v40;
  v24 = (v19 & (v19 * v39)) / v40;
  printf("%d", v24);
  v40 = v21 ^ (v23 + 10);
  v25 = v44;
  v26 = v24 - v44;
  printf("%d", v26);
  v27 = 0;
  if ( (unsigned int)(v22 + 1) < 3 )
    v27 = v22;
  LODWORD(v43) = (int)(v20 + v11) / v25;
  printf("%d", (unsigned int)v43);
  v28 = v41;
  printf("%d", v26 * v41 * v20);
  v29 = v26 + (((int)(v28 + v39) / v38) | 0xFFFFFFF6);
  v30 = v40;
  v31 = v40 ^ v29;
  printf("%d", (unsigned int)v31);
  v32 = v43 + v27 - v30;
  printf("%d", v32);
  v33 = (int)v32 / v37;
  printf("%d", (unsigned int)(v33 - 1));
  v34 = v33 * v11;
  printf("%d", v34);
  printf("%d", v41 ^ v34);
  return (unsigned int)(v20 / v31);
}
// 14B6: variable 'v5' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (00000000000017B0) ----------------------------------------------------
__int64 __fastcall func2(__int64 a1, unsigned int a2)
{
  unsigned int v2; // r13d
  int v3; // ebx
  int v4; // r12d
  unsigned int v5; // ebp
  unsigned int v6; // r14d
  int v7; // ebx
  unsigned int v8; // r14d
  int v9; // r15d
  unsigned int v10; // ebx
  unsigned int v11; // ebx
  unsigned int v12; // ebp
  int v13; // r13d
  int v14; // r15d
  unsigned int v15; // r14d
  int v16; // eax
  unsigned int v17; // r12d
  unsigned int v18; // r15d
  int v19; // r13d
  int v20; // ebp
  unsigned int v21; // r14d
  unsigned int v22; // ebx
  int v23; // ebp
  unsigned int v25; // [rsp+0h] [rbp-58h] BYREF
  unsigned int v26; // [rsp+4h] [rbp-54h]
  unsigned int v27; // [rsp+8h] [rbp-50h]
  unsigned int v28; // [rsp+Ch] [rbp-4Ch]
  unsigned int v29; // [rsp+10h] [rbp-48h]
  unsigned int v30; // [rsp+14h] [rbp-44h]
  __int64 v31; // [rsp+18h] [rbp-40h]
  __int64 v32; // [rsp+20h] [rbp-38h]

  v27 = a2;
  rand();
  __isoc99_scanf("%d", &v25);
  v31 = v25;
  __isoc99_scanf("%d", &v25);
  v26 = v25;
  __isoc99_scanf("%d", &v25);
  v30 = v25;
  __isoc99_scanf("%d", &v25);
  v2 = v25;
  v3 = rand();
  v4 = rand();
  __isoc99_scanf("%d", &v25);
  v5 = v25;
  LODWORD(v32) = v25;
  __isoc99_scanf("%d", &v25);
  v6 = v25;
  __isoc99_scanf("%d", &v25);
  v29 = v25;
  v28 = v6;
  printf("%d", (v27 & (v6 - v2)) - v5);
  v7 = v6 | v4 | v3;
  printf("%d", (unsigned int)v7);
  v8 = (9 - (int)v31) / v7;
  printf("%d", v8);
  v4 &= ~8u;
  printf("%d", (unsigned int)v4);
  v26 = v2 & v26 ^ 0xFFFFFFFA;
  printf("%d", v26);
  v9 = v7;
  v10 = v32 | (v7 / -6);
  printf("%d", v10);
  printf("%d", v10 & v2);
  v27 = v8 * (v4 & (v30 - v31));
  printf("%d", v27);
  v11 = v10 & 9;
  printf("%d", v11);
  v12 = v29;
  v13 = v9;
  v14 = v4 * ((int)(v9 + v29 * v8) / 9);
  printf("%d", v28);
  v32 = v8 * (v8 & v13);
  v15 = v11 - 6 / v4;
  v16 = v12 * (6 / v4);
  v17 = v30;
  v18 = (v30 | v16) + v14;
  v19 = v31;
  v20 = (v30 ^ v11) & (v26 + v31 - v30);
  v21 = v32 ^ v15;
  printf("%d", v21);
  v22 = v32 ^ (v19 | v11);
  printf("%d", v22);
  printf("%d", v28 - v20);
  v23 = (int)v26 / (int)v21 / (int)v31;
  printf("%d", v18 | ((_DWORD)v31 + (v27 | v29 ^ ((int)(v21 + v17 - v29) / v23 + (_DWORD)v31))));
  return v28 | (v23 + v22);
}
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000001A60) ----------------------------------------------------
__int64 func3()
{
  int v0; // r13d
  unsigned int v1; // r15d
  signed int v2; // r12d
  int v3; // ebx
  unsigned int v4; // ebp
  int v5; // ebx
  unsigned int v6; // ebx
  int v7; // r13d
  int v8; // r12d
  int v9; // ebp
  int v10; // ebx
  int v11; // r13d
  int v12; // r12d
  int v13; // eax
  int v14; // edx
  unsigned int v15; // ebp
  unsigned int v16; // ebx
  unsigned int v17; // r14d
  int v18; // r15d
  int v19; // r13d
  __int64 v20; // rsi
  int v21; // r14d
  unsigned int v22; // ebp
  unsigned int v23; // ebx
  int v24; // r13d
  signed int v25; // r12d
  signed int v26; // ebp
  unsigned int v27; // ebx
  int v28; // r14d
  unsigned int v29; // ebp
  int v30; // r15d
  int v31; // ebp
  unsigned int v32; // r12d
  unsigned int v34; // [rsp+0h] [rbp-68h] BYREF
  int v35; // [rsp+4h] [rbp-64h]
  int v36; // [rsp+8h] [rbp-60h]
  int v37; // [rsp+Ch] [rbp-5Ch]
  unsigned int v38; // [rsp+10h] [rbp-58h]
  unsigned int v39; // [rsp+14h] [rbp-54h]
  __int64 v40; // [rsp+18h] [rbp-50h]
  __int64 v41; // [rsp+20h] [rbp-48h]
  int v42; // [rsp+28h] [rbp-40h]
  int v43; // [rsp+2Ch] [rbp-3Ch]
  __int64 v44; // [rsp+30h] [rbp-38h]

  v0 = rand();
  rand();
  __isoc99_scanf("%d", &v34);
  v37 = v34;
  LOBYTE(v1) = rand();
  LODWORD(v41) = rand();
  __isoc99_scanf("%d", &v34);
  v44 = v34;
  __isoc99_scanf("%d", &v34);
  v2 = v34;
  v38 = v34;
  v35 = rand();
  v3 = rand();
  __isoc99_scanf("%d", &v34);
  v36 = v34;
  LODWORD(v40) = v0;
  v39 = v41 | (v0 - v34);
  printf("%d", v39);
  v4 = v44;
  v5 = ((unsigned __int64)(1431655765LL * ((int)(v0 + (v44 ^ v3)) / v2)) >> 32) - (int)(v0 + (v44 ^ v3)) / v2;
  v6 = ((unsigned int)v5 >> 31) + (v5 >> 1);
  printf("%d", v6);
  v4 *= 2;
  printf("%d", v4);
  v7 = v1 & 2;
  printf("%d", v1 & 2);
  v43 = v7;
  v35 = v6 + ((unsigned __int8)v4 | (unsigned __int8)(v7 + v35) | 0xFFFFFFFB);
  v8 = v35;
  v1 |= 0xFFFFFFFD;
  printf("%d", v1);
  v9 = v44;
  v10 = v36;
  v41 = (unsigned int)((v8 ^ ((int)v44 / v36)) / v7);
  v11 = v41 + v1;
  v42 = v41 + v1;
  printf("%d", (unsigned int)v41 + v1);
  v12 = v9;
  v13 = v9 | v10;
  v14 = (v9 | v10) >> 31;
  v15 = v38;
  printf("%d", (((unsigned int)(__SPAIR64__(v14, v13) / (int)v38) - (_DWORD)v40) | 0xA) + v1 - v10);
  v16 = v15 * (v12 - v11);
  printf("%d", v16);
  v17 = v39;
  v18 = v39 ^ v11;
  printf("%d", v39 ^ v11);
  v19 = v37 * v12;
  v40 = (unsigned int)(v37 * v12);
  printf("%d", v40);
  v20 = v12 & v17;
  v21 = v12;
  printf("%d", v20);
  v22 = v16 * (v12 ^ v19);
  printf("%d", v22);
  v23 = ((unsigned int)(((unsigned __int64)(1431655765LL * v35) >> 32) - v35) >> 31)
      + ((int)(((unsigned __int64)(1431655765LL * v35) >> 32) - v35) >> 1);
  printf("%d", v23);
  v24 = v42 | (v12 * v22);
  v25 = v42 * ((int)(v12 + 10 * (v22 + v40)) / (int)v41) - v22;
  v36 = v21 ^ v23;
  v35 = v42 * ((int)(v21 + 10 * (v22 + v40)) / (int)v41) - v22 - v24;
  LODWORD(v20) = (v25 * v18 - 10) * (v23 | v42 | (v21 * v22));
  v26 = v38;
  printf("%d", v21 * (v38 | (unsigned int)v20));
  v27 = v41 | v21 ^ (v43 * (v41 + v23));
  printf("%d", v27);
  v28 = v40;
  v29 = v40 ^ ((int)(v39 ^ (v37 * v39)) / v26);
  printf("%d", v29);
  v30 = v25 / v36;
  printf("%d", (unsigned int)(v25 / v36));
  printf("%d", (unsigned int)((int)(v35 | v29 | v27) / (int)v27));
  v31 = v28 + (v24 | v29);
  v32 = v28 ^ (v37 / v25 / v31);
  printf("%d", v32);
  return v32 & ((int)(v31 ^ (v30 + (v28 & v27))) / v30);
}
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000001DD0) ----------------------------------------------------
__int64 func4()
{
  int v0; // r15d
  int v1; // ebp
  int v2; // ebx
  __int64 v3; // rsi
  unsigned int v4; // r12d
  signed int v5; // ebp
  int v6; // ebx
  __int64 v7; // r13
  int v8; // ebx
  int v9; // r14d
  unsigned int v10; // ebx
  int v11; // ebx
  unsigned int v12; // r12d
  unsigned int v13; // r15d
  int v14; // r12d
  int v15; // r14d
  unsigned int v16; // ebp
  int v17; // ebx
  int v19; // [rsp+Ch] [rbp-5Ch]
  int v20; // [rsp+Ch] [rbp-5Ch]
  int v21; // [rsp+10h] [rbp-58h] BYREF
  int v22; // [rsp+14h] [rbp-54h]
  int v23; // [rsp+18h] [rbp-50h]
  int v24; // [rsp+1Ch] [rbp-4Ch]
  int v25; // [rsp+20h] [rbp-48h]
  int v26; // [rsp+24h] [rbp-44h]
  int v27; // [rsp+28h] [rbp-40h]
  int v28; // [rsp+2Ch] [rbp-3Ch]
  __int64 v29; // [rsp+30h] [rbp-38h]

  rand();
  __isoc99_scanf("%d", &v21);
  v23 = v21;
  v0 = rand();
  __isoc99_scanf("%d", &v21);
  __isoc99_scanf("%d", &v21);
  __isoc99_scanf("%d", &v21);
  v19 = rand();
  v1 = rand();
  v2 = rand();
  rand();
  v22 = v0 ^ 0xFFFFFFF9;
  v3 = v2 & 0xFFFFFFF8;
  v27 = v2 & 0xFFFFFFF8;
  v28 = v0;
  printf("%d", v3);
  v4 = -7 * v3 * v1;
  printf("%d", v4);
  v24 = v0 / v1;
  v5 = ((unsigned int)(((unsigned __int64)(1840700269LL * (v23 ^ (v24 | 9))) >> 32) - (v23 ^ (v24 | 9))) >> 31)
     + ((int)(((unsigned __int64)(1840700269LL * (v23 ^ (v24 | 9))) >> 32) - (v23 ^ (v24 | 9))) >> 2);
  v6 = (v0 & v24) - 7;
  v23 = 8 * v5;
  printf("%d", (unsigned int)(-7 * v5));
  v7 = (unsigned int)(v19 / v6);
  printf("%d", v7);
  v8 = (int)v7 / v22;
  printf("%d", (unsigned int)((int)v7 / v22));
  v20 = (-8 * v5) | v8 ^ (v4 - -7 * v5);
  v9 = (int)v4 / v5 - v7;
  v29 = v7;
  v25 = v8;
  v10 = (int)(v24 * (v8 * v4 * (v7 & 0xFFFFFFF8) - v8)) / v9;
  printf("%d", v10);
  v22 = v9;
  LODWORD(v7) = (v10 | v9 ^ (v5 + v7)) - (v10 + v4);
  v11 = v5 - v27;
  v12 = ((v5 - v27) ^ v9) / v27;
  printf("%d", v12);
  v26 = v11;
  v13 = v11 | 0xFFFFFFF8;
  printf("%d", v13);
  v14 = v5 | v25 & (v24 ^ v12);
  v15 = v29 * (v5 + (v11 & v20));
  printf("%d", (unsigned int)v7 ^ (v25 | ((v13 & v15) + v28 + v24)));
  v16 = v13 + (v7 & v5);
  printf("%d", v16);
  v17 = v16 & (v7 ^ v15 & ((v14 + v22 - v23) / v15 / v14));
  printf("%d", (unsigned int)(v17 * ((v14 - v26) / v20)));
  return (unsigned int)(((v20 | v17) - v14) / v20);
}
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000002080) ----------------------------------------------------
__int64 func5()
{
  __int64 v0; // rax
  int v1; // r13d
  __int64 v2; // rax
  int v3; // r14d
  int v4; // r15d
  int v5; // ebx
  unsigned int v6; // r13d
  int v7; // ebp
  int v8; // r12d
  int v9; // r14d
  int v10; // ebx
  unsigned int v11; // r15d
  int v12; // r13d
  int v13; // ebp
  unsigned int v14; // r15d
  int v15; // ebx
  int v16; // ecx
  int v17; // eax
  int v18; // r13d
  unsigned int v19; // r12d
  unsigned int v20; // ebp
  int v21; // ebx
  int v22; // r15d
  unsigned int v23; // r14d
  int v24; // r13d
  int v25; // r14d
  unsigned int v26; // r15d
  unsigned int v27; // ebx
  unsigned int v28; // ebp
  unsigned int v29; // ebp
  int v31; // [rsp+0h] [rbp-68h] BYREF
  int v32; // [rsp+4h] [rbp-64h]
  unsigned int v33; // [rsp+8h] [rbp-60h]
  unsigned int v34; // [rsp+Ch] [rbp-5Ch]
  int v35; // [rsp+10h] [rbp-58h]
  int v36; // [rsp+14h] [rbp-54h]
  int v37; // [rsp+18h] [rbp-50h]
  int v38; // [rsp+1Ch] [rbp-4Ch]
  __int64 v39; // [rsp+20h] [rbp-48h]
  __int64 v40; // [rsp+28h] [rbp-40h]
  __int64 v41; // [rsp+30h] [rbp-38h]

  __isoc99_scanf("%d", &v31);
  v35 = v31;
  LODWORD(v0) = rand();
  v40 = v0;
  v33 = rand();
  __isoc99_scanf("%d", &v31);
  v1 = v31;
  LODWORD(v2) = rand();
  v39 = v2;
  v34 = rand();
  v3 = rand();
  __isoc99_scanf("%d", &v31);
  __isoc99_scanf("%d", &v31);
  v4 = v31;
  __isoc99_scanf("%d", &v31);
  v5 = v31;
  v6 = v3 & v1;
  printf("%d", v6);
  printf("%d", (8 * v5) ^ 0x40u);
  v37 = v4;
  v7 = v5 | (v35 * v6) & (v3 * v4);
  printf("%d", v7 & (unsigned int)(v35 + v5));
  v8 = v39;
  v32 = v39 & v34;
  v9 = v33 * v3;
  v41 = v34 ^ v6;
  v10 = v41 + 8;
  v38 = v41 + 8;
  printf("%d", (unsigned int)(v41 + 8));
  v11 = v4 / v10;
  printf("%d", v11);
  v12 = v40;
  printf("%d", (unsigned int)(-2 / v8 + v8 + v40 - v7));
  v13 = v35;
  v36 = v35 | v11;
  v14 = v9 | v35 | v11;
  printf("%d", v14);
  v15 = v32;
  printf("%d", v37 * (v34 | v32 & v33));
  v32 = v15 ^ 0xA;
  v16 = v12;
  v17 = v12 / v13;
  v18 = v13;
  v19 = (v16 | v17) / 10;
  printf("%d", v19);
  v20 = (unsigned __int8)v9 ^ (unsigned __int8)v19 | 0xFFFFFFFE;
  printf("%d", v20);
  v21 = (int)(v14 | (v39 + v20)) / v36 / 2;
  v22 = (int)(v14 | (v39 + v20)) / v36 / -2;
  v23 = v38 * v9 / v18;
  printf("%d", v23);
  v24 = v37;
  v25 = v37 * v23;
  printf("%d", (unsigned int)v25);
  v26 = v36 ^ (v22 | 0xFFFFFFFE);
  printf("%d", v26);
  v27 = v19 + v21;
  v28 = v24 * (v27 * (v32 / v25) + v40);
  printf("%d", v28);
  printf("%d", v26 & v28);
  v29 = v19 & (v41 + v27 + 8);
  printf("%d", v29);
  return v29 + v19 - v25;
}
// 20B0: variable 'v0' is possibly undefined
// 20D8: variable 'v2' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000002350) ----------------------------------------------------
__int64 func6()
{
  int v0; // r13d
  unsigned int v1; // ebp
  int v2; // r14d
  int v3; // r12d
  int v4; // ebx
  unsigned int v5; // r13d
  unsigned int v6; // r15d
  int v7; // r12d
  unsigned int v8; // r14d
  int v9; // ebx
  signed int v10; // ebp
  unsigned int v11; // ebx
  int v12; // eax
  signed int v13; // ecx
  unsigned int v14; // ebp
  int v15; // r12d
  unsigned int v16; // r15d
  unsigned int v17; // r15d
  unsigned int v18; // ebx
  unsigned int v19; // esi
  int v20; // ebp
  int v21; // r12d
  int v22; // r13d
  unsigned int v23; // ebp
  int v24; // r12d
  int v25; // ebx
  unsigned int v27; // [rsp+Ch] [rbp-4Ch] BYREF
  unsigned int v28; // [rsp+10h] [rbp-48h]
  unsigned int v29; // [rsp+14h] [rbp-44h]
  int v30; // [rsp+18h] [rbp-40h]
  int v31; // [rsp+1Ch] [rbp-3Ch]
  int v32; // [rsp+20h] [rbp-38h]
  int v33; // [rsp+24h] [rbp-34h]

  __isoc99_scanf("%d", &v27);
  v28 = rand();
  __isoc99_scanf("%d", &v27);
  v32 = v27;
  v0 = rand();
  __isoc99_scanf("%d", &v27);
  v1 = v27;
  v2 = rand();
  __isoc99_scanf("%d", &v27);
  v30 = v27;
  v3 = rand();
  v31 = v3;
  v4 = rand();
  v29 = v4;
  __isoc99_scanf("%d", &v27);
  printf("%d", 0xFFFFFFFFLL);
  v1 &= 0xFFFFFFFA;
  printf("%d", v1);
  printf("%d", (unsigned int)(v2 - v4));
  v5 = v1 | v0;
  v33 = v1;
  printf("%d", v5);
  v6 = v3 - v2;
  v7 = v2;
  printf("%d", v6);
  v8 = v30 & (((_BYTE)v1 * (_BYTE)v30) | 0xFFFFFFFD);
  printf("%d", v8);
  v9 = v7 ^ (v1 | v8);
  v10 = v28;
  v11 = v28 & v9;
  printf("%d", v11);
  v12 = v7 / v10;
  v13 = v10;
  v14 = v29;
  printf("%d", (v13 | v29 & v12) + v5 - 6);
  v15 = v33;
  v16 = (v33 ^ v6) - v11;
  printf("%d", v16);
  v17 = v32 & (v5 + (v16 & 0xFFFFFFFD) - 3);
  v18 = v14 + v11;
  v19 = v14;
  v20 = v15;
  v21 = ((v18 ^ v15 ^ v5) + v8 - v31) ^ 2;
  v22 = v30;
  v28 = v30 / ~v31 / v20;
  v23 = v19 ^ ((v31 | v30 & v19) - 1);
  v24 = v23 * (v30 | (v28 + v21));
  v25 = v31 - v23;
  printf("%d", v31 - v23);
  printf("%d", ((int)v8 / v32) | (unsigned int)v22);
  printf("%d", (unsigned int)(v25 + v24));
  printf("%d", (unsigned int)((int)(v31 & ~v29) / v25));
  printf("%d", v23);
  return v28 & v17;
}
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (00000000000025B0) ----------------------------------------------------
__int64 func7()
{
  unsigned int v0; // r14d
  int v1; // r12d
  __int64 v2; // rax
  int v3; // ebx
  __int64 v4; // r15
  int v5; // ebp
  int v6; // r12d
  int v7; // ebx
  int v8; // r13d
  int v9; // r14d
  int v10; // ebp
  int v11; // ebx
  int v12; // r12d
  unsigned int v13; // r13d
  int v14; // r12d
  int v15; // r14d
  __int64 v16; // rsi
  int v17; // r13d
  int v18; // ebp
  int v19; // ebx
  int v20; // r14d
  int v21; // ebp
  unsigned int v23; // [rsp+8h] [rbp-60h] BYREF
  int v24; // [rsp+Ch] [rbp-5Ch]
  unsigned int v25; // [rsp+10h] [rbp-58h]
  int v26; // [rsp+14h] [rbp-54h]
  __int64 v27; // [rsp+18h] [rbp-50h]
  int v28; // [rsp+20h] [rbp-48h]
  unsigned int v29; // [rsp+24h] [rbp-44h]
  __int64 v30; // [rsp+28h] [rbp-40h]
  __int64 v31; // [rsp+30h] [rbp-38h]

  __isoc99_scanf("%d", &v23);
  v27 = v23;
  __isoc99_scanf("%d", &v23);
  v0 = v23;
  v26 = v23;
  __isoc99_scanf("%d", &v23);
  v1 = rand();
  LODWORD(v2) = rand();
  v31 = v2;
  __isoc99_scanf("%d", &v23);
  __isoc99_scanf("%d", &v23);
  v29 = v23;
  v3 = rand();
  v4 = (unsigned int)rand();
  __isoc99_scanf("%d", &v23);
  v5 = (v1 | v3) ^ 9;
  v24 = v5;
  v6 = v27;
  v7 = v27 & v0;
  printf("%d", (unsigned int)v27 & v0);
  v30 = v4;
  v8 = v31;
  v28 = v31 & v4;
  printf("%d", (unsigned int)v31 & (unsigned int)v4);
  v25 = (int)(v0 ^ v7) / v5 / v8;
  v9 = v4 + v8;
  v10 = v8;
  printf("%d", (unsigned int)(v4 + v8));
  v11 = v8 | (10 * v6);
  printf("%d", 0xFFFFFFFFLL);
  v12 = v25 | v30 | (v30 + v8 + 10);
  v13 = v29;
  v14 = v29 * v12;
  v15 = v11 * v9 - v28;
  printf("%d", (unsigned int)(v24 * (v11 - 1)));
  printf("%d", (unsigned int)(v15 + v10));
  printf("%d", v10 * v13);
  v16 = v15 ^ (unsigned int)(v26 * v27);
  v27 = v16;
  printf("%d", v16);
  v17 = v30;
  v18 = v11 & v30;
  printf("%d", v11 & (unsigned int)v30);
  v19 = v14 / v11;
  printf("%d", (unsigned int)v19);
  v20 = v18 ^ ((v18 | v15) - v24);
  printf("%d", (unsigned int)v20);
  printf("%d", (unsigned int)(v19 / v18));
  LOBYTE(v4) = v25;
  printf("%d", v25 ^ v17);
  v21 = v26;
  printf("%d", (unsigned int)(v20 / v26));
  printf("%d", v21 + (((v4 & 0xB) / v14) | 0xA));
  return (unsigned int)v27 * (v21 + (((v4 & 0xB) / v14) | 0xA));
}
// 2616: variable 'v2' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000002820) ----------------------------------------------------
__int64 __fastcall func8(int a1, unsigned int a2)
{
  unsigned int v2; // r14d
  __int64 v3; // r12
  unsigned int v4; // ebp
  unsigned int v5; // ebx
  unsigned int v6; // r13d
  int v7; // r15d
  int v8; // ebp
  __int64 v9; // r13
  __int64 v10; // rsi
  unsigned int v11; // ebx
  unsigned int v12; // ebp
  int v13; // r15d
  unsigned int v14; // r14d
  int v15; // r15d
  int v16; // ebp
  int v17; // ebx
  unsigned int v18; // r15d
  unsigned int v19; // r14d
  int v20; // ebp
  int v21; // ebp
  int v22; // ebx
  int v23; // r15d
  unsigned int v24; // r14d
  int v25; // ebx
  int v26; // ebp
  int v27; // r14d
  unsigned int v29; // [rsp+4h] [rbp-74h] BYREF
  int v30; // [rsp+8h] [rbp-70h]
  int v31; // [rsp+Ch] [rbp-6Ch]
  unsigned int v32; // [rsp+10h] [rbp-68h]
  int v33; // [rsp+14h] [rbp-64h]
  __int64 v34; // [rsp+18h] [rbp-60h]
  int v35; // [rsp+20h] [rbp-58h]
  int v36; // [rsp+24h] [rbp-54h]
  __int64 v37; // [rsp+28h] [rbp-50h]
  __int64 v38; // [rsp+30h] [rbp-48h]
  unsigned int v39; // [rsp+3Ch] [rbp-3Ch]
  __int64 v40; // [rsp+40h] [rbp-38h]

  v32 = a2;
  v31 = a1;
  __isoc99_scanf("%d", &v29);
  v34 = v29;
  __isoc99_scanf("%d", &v29);
  v2 = v29;
  __isoc99_scanf("%d", &v29);
  v3 = (unsigned int)rand();
  v30 = rand();
  __isoc99_scanf("%d", &v29);
  v4 = v29;
  __isoc99_scanf("%d", &v29);
  LODWORD(v37) = v29;
  __isoc99_scanf("%d", &v29);
  v5 = v29;
  __isoc99_scanf("%d", &v29);
  v6 = v29;
  v39 = v29;
  v33 = rand();
  v40 = v3;
  printf("%d", v2 * (unsigned int)v3);
  v36 = v4 ^ 5;
  v7 = v31;
  printf("%d", (unsigned int)(v30 / v31));
  v8 = v33;
  v9 = v6 * (v33 - v7);
  v38 = v9;
  v10 = v2 + (unsigned int)v34;
  v34 = v10;
  printf("%d", v10);
  printf("%d", v7 + (unsigned int)v3 * (v8 & v5));
  v30 = v3 - 5;
  printf("%d", ((_DWORD)v3 - 5) & (unsigned int)v9);
  v11 = v32;
  LODWORD(v9) = v34;
  v12 = v34 & ((int)(v32 & v8) / (int)v37 / v36);
  printf("%d", v12);
  v37 = v11 * (_DWORD)v9 - v11;
  printf("%d", v37);
  v13 = v31;
  v35 = v12;
  v14 = v12 * (v2 - v31) - v11;
  printf("%d", v14);
  LODWORD(v3) = (v13 & (-10 * v9)) - v39;
  LODWORD(v9) = v36;
  v15 = v33 & (v14 * (((v33 & (v40 * v12) & 0xFFFFFFF6) - v36) & 0xFFFFFFF6));
  v16 = v33;
  v17 = v38;
  v18 = v38 ^ v15;
  printf("%d", v18);
  v30 *= v16;
  v31 = v17 + v37;
  v19 = (v17 + v37) ^ v35;
  printf("%d", v19);
  v32 |= v9;
  v20 = v9;
  printf("%d", v32);
  LODWORD(v9) = v40;
  printf("%d", (unsigned int)v40 & ((_DWORD)v40 - v18));
  printf("%d", (unsigned int)(v3 + v20));
  v21 = v34 ^ v3;
  v22 = v21 ^ v38;
  LODWORD(v3) = v33 | (v19 * (v34 + v3));
  v23 = v35;
  v24 = (int)((v21 ^ v38) * ((int)v32 / v35 - v30)) / (int)v37;
  printf("%d", v24);
  v25 = (v22 - (int)v9) / v21 + v9 - 5;
  v26 = v21 - v24;
  v27 = v38;
  LODWORD(v9) = v31;
  printf("%d", v31 + ((unsigned int)v38 ^ v26));
  return (v23 ^ (unsigned int)v3) - ((_DWORD)v34 + (v27 | v23 & (unsigned int)v9 & v25));
}
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000002B60) ----------------------------------------------------
__int64 __fastcall func9(int a1, unsigned int a2, __int64 a3)
{
  int v4; // ebx
  __int64 v5; // rax
  __int64 v6; // r13
  unsigned int v7; // r14d
  int v8; // r15d
  int v9; // edi
  unsigned int v10; // r15d
  int v11; // r12d
  unsigned int v12; // ebp
  int v13; // ebx
  int v14; // edx
  int v15; // r13d
  int v16; // ecx
  int v17; // ebp
  int v18; // eax
  int v19; // ebx
  int v20; // r14d
  int v21; // r12d
  unsigned int v22; // r14d
  int v23; // ebx
  int v24; // r15d
  int v25; // ebx
  int v26; // r15d
  int v27; // ebp
  unsigned int v29; // [rsp+4h] [rbp-74h] BYREF
  unsigned int v30; // [rsp+8h] [rbp-70h]
  int v31; // [rsp+Ch] [rbp-6Ch]
  int v32; // [rsp+10h] [rbp-68h]
  int v33; // [rsp+14h] [rbp-64h]
  __int64 v34; // [rsp+18h] [rbp-60h]
  __int64 v35; // [rsp+20h] [rbp-58h]
  __int64 v36; // [rsp+28h] [rbp-50h]
  int v37; // [rsp+34h] [rbp-44h]
  __int64 v38; // [rsp+38h] [rbp-40h]
  __int64 v39; // [rsp+40h] [rbp-38h]

  v35 = a3;
  v30 = a2;
  v37 = a1;
  rand();
  __isoc99_scanf("%d", &v29);
  v39 = v29;
  v4 = rand();
  rand();
  LODWORD(v5) = rand();
  v34 = v5;
  __isoc99_scanf("%d", &v29);
  __isoc99_scanf("%d", &v29);
  v6 = v29;
  __isoc99_scanf("%d", &v29);
  v7 = v29;
  __isoc99_scanf("%d", &v29);
  v8 = v29;
  v31 = rand();
  v9 = v8;
  v33 = v8;
  v38 = (v7 & v30 ^ v8) + v4;
  v32 = (v7 & v30 ^ v8) + v4 + 9;
  v10 = ((unsigned int)((int)v39 * v32 / a1) >> 1) & 4;
  v11 = v34;
  v12 = ((v32 * (v7 & (-8 * (v6 ^ v9)))) & v34 & (v39 - 8)) - (v7 & v30);
  v13 = v7 & v30;
  printf("%d", v12);
  v14 = v6;
  v36 = v6;
  v30 = v13;
  v15 = v13 * ((v35 + v6) & 0xFFFFFFFE) - v35;
  v16 = v12 + v11 + 7;
  if ( (int)(v11 + v12) >= 0 )
    v16 = v11 + v12;
  v17 = (v12 | -(v16 >> 3)) * v14 * v12;
  printf("%d", (unsigned int)v17);
  v18 = v10 * (v13 + v37);
  v19 = v31;
  v20 = v31 - v18;
  printf("%d", (unsigned int)(v31 - v18));
  printf("%d", (unsigned int)(v38 + v15 + 9));
  v32 &= v34;
  LODWORD(v35) = v15 & 8;
  v21 = v17 & v34;
  printf("%d", v17 & (unsigned int)v34);
  v22 = v20 - v15;
  printf("%d", v22);
  v23 = v36 & v19;
  printf("%d", (v21 ^ 9u) - v23);
  v24 = v23 * (-8 / (int)v22 / v21);
  LODWORD(v34) = v15 ^ v21;
  printf("%d", (unsigned int)-(v17 + (int)v36 * (((v15 ^ v21) - (v24 + (int)v38 + 9)) / v33) / 8));
  v25 = v24 & ((v39 ^ (v15 * v17 - 8)) - v30);
  v26 = v32;
  printf("%d", v21 ^ ((unsigned int)v34 * ((_DWORD)v35 * (((v32 ^ v33) / v17) ^ v22) - v15)));
  v27 = v36;
  printf("%d", v31 | v21 & ((unsigned int)v36 | v30));
  return (unsigned int)((v27 + v21) * (v25 - v26));
}
// 2BBB: variable 'v5' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000002E40) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // r12d
  int v4; // ebp
  unsigned int v5; // r14d
  int v6; // ebx
  __int64 v7; // rdx
  unsigned int v9; // [rsp+4h] [rbp-34h] BYREF
  int v10; // [rsp+8h] [rbp-30h] BYREF
  char v11[44]; // [rsp+Ch] [rbp-2Ch] BYREF

  v3 = rand();
  v4 = rand();
  __isoc99_scanf("%d", &v9);
  v5 = v9;
  __isoc99_scanf("%d", &v10);
  v6 = v10;
  __isoc99_scanf("%d", v11);
  func0(v3, v4, v7, v6);
  func1(v3, v4, v5, v6);
  func2(v3, v4);
  func3();
  func4();
  func5();
  func6();
  func7();
  func8(v3, v4);
  func9(v3, v4, v5);
  return 0;
}
// 2EA3: variable 'v7' is possibly undefined
// 1040: using guessed type __int64 __isoc99_scanf(const char *, ...);
// 2E40: using guessed type char var_2C[44];

//----- (0000000000002F00) ----------------------------------------------------
void term_proc()
{
  ;
}

// nfuncs=32 queued=22 decompiled=22 lumina nreq=0 worse=0 better=0
// ALL OK, 22 function(s) have been successfully decompiled
